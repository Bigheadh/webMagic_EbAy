<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.yuanhan</groupId>
	<artifactId>yuanhan-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>
	<description>Parent pom project for all yuanhan-framework sub module projects</description>


	<developers>
		<developer>
			<name>yuanhan</name>
			<email />
			<organization>Technology Department</organization>
			<organizationUrl>http://www.zhihuijianshe.com</organizationUrl>
			<roles>
				<role>Platform Tech Architect</role>
			</roles>
		</developer>
	</developers>


	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prd</id>
			<properties>
				<profiles.active>prd</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>uat</id>
			<properties>
				<profiles.active>uat</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>sit</id>
			<properties>
				<profiles.active>sit</profiles.active>
			</properties>
		</profile>
	</profiles>


	<properties>
		<argLine>-Dfile.encoding=UTF-8</argLine>
		<java.version>1.8</java.version>
		<maven.version.range>[3.0.4,)</maven.version.range>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-war-plugin.version>3.2.0</maven-war-plugin.version>
		<maven-sources-plugin.version>3.0.1</maven-sources-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<maven.async-install-api>true</maven.async-install-api>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<plexus-compiler-eclipse.version>2.8.2</plexus-compiler-eclipse.version>
		<resources.delimiter>@</resources.delimiter>
		<lombok.version>1.16.20</lombok.version>

		<springframework.boot.version>1.5.13.RELEASE</springframework.boot.version>
		<yuanhan.framework.version>0.0.1-SNAPSHOT</yuanhan.framework.version>
		<springframework.boot.admin.version>1.5.6</springframework.boot.admin.version>
		
		<swagger2.version>2.8.0</swagger2.version>
		<swagger2-ui.version>0.0.4</swagger2-ui.version>
		
		<elastic-job.version>2.1.5</elastic-job.version>
		<zookeeper.version>3.5.2-alpha</zookeeper.version>

		<druid.version>1.0.31</druid.version>
		<mysql-connector.version>6.0.6</mysql-connector.version>
		<pgsql.version>42.2.2</pgsql.version>

		<dockerfile.maven.plugin>1.3.6</dockerfile.maven.plugin>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.yuanhan</groupId>
				<artifactId>yuanhan-dependencies</artifactId>
				<version>${yuanhan.framework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>com.yuanhan</groupId>
			<artifactId>yuanhan-quark</artifactId>
		</dependency>
		<dependency>
			<groupId>com.yuanhan</groupId>
			<artifactId>yuanhan-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.yuanhan</groupId>
			<artifactId>yuanhan-api-doc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${springframework.boot.admin.version}</version>
		</dependency> -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version><!--$NO-MVN-MAN-VER$-->
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${pgsql.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>
	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/application*.properties</exclude>
					<exclude>**/yuanhan*.properties</exclude>
					<exclude>**/application*.yaml</exclude>
					<exclude>**/yuanhan*.yaml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.properties</include>
					<include>application-${profiles.active}.properties</include>
					<include>yuanhan-${profiles.active}.properties</include>

					<include>application.yaml</include>
					<include>application-${profiles.active}.yaml</include>
					<include>yuanhan-${profiles.active}.yaml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<testSource>${java.version}</testSource>
					<testTarget>${java.version}</testTarget>
					<optimize>true</optimize>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<delimiters>
						<delimiter>${resources.delimiter}</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<encoding>${project.build.sourceEncoding}</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>woff</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						<nonFilteredFileExtension>eot</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						<nonFilteredFileExtension>svg</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/api</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${springframework.boot.version}</version>
				<configuration>
					<executable>true</executable>
					<layout>ZIP</layout>
					<includes>
						<include>
							<groupId>nothing</groupId>
							<artifactId>nothing</artifactId>
						</include>
					</includes>
					<excludeGroupIds>
						<!--  打印 groupId  -->
						<!-- mvn dependency:tree|grep -e "compile" -e "runtime"|sed 's/|//g'|sed 's/+//g'|awk '{print $3}'|awk -F ":" '{print $1,","}'|sort|uniq|grep -vE "(com.****|common-)"|xargs  -->
					</excludeGroupIds>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<executions>
						<execution>
							<id>api-package</id>
							<goals>
								<goal>jar</goal>
							</goals>
							<phase>package</phase>
							<configuration>
								<classifier>api</classifier>
								<includes>
									<include>com/yuanhan/**/api/**</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>api-install</id>
							<phase>package</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<!-- <async>${maven.async-install-api}</async> -->
								<executable>mvn</executable>
								<arguments>
									<argument>install:install-file</argument>
									<argument>-Dpackaging=jar</argument>
									<argument>-DartifactId=${project.artifactId}-api</argument>
									<argument>-DgroupId=${project.groupId}</argument>
									<argument>-Dversion=${project.version}</argument>
									<argument>-Dfile=${project.build.directory}/${project.artifactId}-${project.version}-api.jar</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>